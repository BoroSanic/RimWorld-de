<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>


	<Combat_MeleeIncludes.rulePack.rulesStrings>
		<li>r_logentry->[action], [result].</li>
		<li>r_logentry(p=0.2)->[action].</li>

		<li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive]em [WEAPON_label] [TOOL_label]</li>
		<li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive]em [WEAPON_label]</li>
		<li>implement(IMPLEMENTOWNER_type==weapon,p=1)->einem [WEAPON_label] [TOOL_label]</li>
		<li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->einem [WEAPON_label]</li>

		<li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[TOOL_label]</li>
		<li>implement(IMPLEMENTOWNER_type==bodypart,p=1)->[adjective_bodypart] [TOOL_label]</li>

		<li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive]em [WEAPON_label] [TOOL_label]</li>
		<li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive]em [WEAPON_label]</li>
		<li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive]e [TOOL_label]</li>

		<li>adjective_bodypart->harter</li>
		<li>adjective_bodypart->starker</li>
		<li>adjective_bodypart->kraftvoller</li>
		<li>adjective_bodypart->kräftiger</li>
		<li>adjective_bodypart->mächtiger</li>
		<li>adjective_bodypart->schroffer</li>
		<li>adjective_bodypart->starker</li>
		<li>adjective_bodypart->robuster</li>
		<li>adjective_bodypart->solider</li>
		<li>adjective_bodypart->zäher</li>
		<li>adjective_bodypart->unnachgiebiger</li>
		<li>adjective_bodypart->fester</li>

		<li>targetlist(RECIPIENT_part_count==1)->[RECIPIENT_part0_label]</li>
		<li>targetlist(RECIPIENT_part_count==2)->[RECIPIENT_part0_label] und [RECIPIENT_part1_label]</li>
		<li>targetlist(RECIPIENT_part_count==3)->[RECIPIENT_part0_label], [RECIPIENT_part1_label] und [RECIPIENT_part2_label]</li>
		<li>targetlist->[RECIPIENT_part0_label], [RECIPIENT_part1_label], [RECIPIENT_part2_label] und [RECIPIENT_part3_label]</li>
		<!-- don't include constraint; this acts as a fallback for >=4-->

		<li>damaged_present(deflected!=True)->verwundet</li>
		<li>damaged_present(deflected!=True)->verletzt</li>

		<li>destroyed(p=0.5)->zerstört</li>
		<li>destroyed(p=0.5)->demoliert</li>
		<li>destroyed(p=0.5)->ruiniert</li>
		<li>destroyed(p=0.5)->zertrümmert</li>

		<li>wince(recipient_flesh==Normal)->zusammenzuckend</li>
		<li>wince(recipient_flesh==Normal)->eine Grimasse schneidend</li>
		<li>wince(recipient_flesh==Normal)->erschaudernd</li>
		<li>wince(recipient_flesh==Normal)->stöhnend</li>
		<li>wince(recipient_flesh!=Mechanoid)->schreiend</li>
		<li>wince(recipient_flesh!=Mechanoid)->aufschreiend</li>
		<li>wince->zuckend</li>
		<li>wince->stolpernd</li>

		<li>painstate->vor</li>
		<li>painstate->wegen der</li>
		<li>painstate->aufgrund der</li>

		<li>painevent(recipient_flesh!=Mechanoid)->[painstate] Schmerzen</li>
		<li>painevent(recipient_flesh!=Mechanoid)->[painstate] starken Schmerzen</li>
		<li>painevent(recipient_flesh==Normal)->[painstate] Qual</li>
		<li>painevent->durch die Verletzung</li>
		<li>painevent->wegen der Wunde</li>

		<li>to->in</li>
		<li>to->in</li>
	</Combat_MeleeIncludes.rulePack.rulesStrings>



	<Combat_MeleeDamageIncludes.rulePack.rulesStrings>
		<li>result(p=0.5)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
		<li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [adverb_flavortext]</li>
		<li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [flavortext_situation]</li>
		<li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] und [flavortext_consequence]</li>

		<li>adverb_flavortext->schmerzhaft</li>
		<li>adverb_flavortext->brutal</li>
		<li>adverb_flavortext->entsetzlich</li>
		<li>adverb_flavortext->qualvoll</li>
		<li>adverb_flavortext->heftig</li>
		<li>adverb_flavortext->schonungslos</li>
		<li>adverb_flavortext->wild</li>
		<li>adverb_flavortext->brutal</li>
		<li>adverb_flavortext->erbarmungslos</li>
		<li>adverb_flavortext->herzlos</li>

		<li>flavortext_situation(recipient_flesh!=Mechanoid)->in einer Explosion der Gedärme</li>
		<li>flavortext_situation(recipient_flesh==Mechanoid)->in einer Schrott-Explosion</li>
		<li>flavortext_situation->ohne jede Emotion</li>
		<li>flavortext_situation(p=0.4)->mit einem ausdruckslosen Gesicht</li>
		<li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mit einem brutalen Gesichtsausdruck</li>
		<li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mit einem [AdjectiveBadass] Ausdruck</li>
		<li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mit einer Grimasse</li>
		<li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mit einem Lachen auf den Lippen</li>
		<li>flavortext_situation(p=0.2,initiator_flesh==Normal)->mit einem Lächeln</li>

		<li>flavortext_consequence(recipient_flesh!=Mechanoid)->hinterlässt eine hässliche Wunde</li>
		<li>flavortext_consequence->hinterlässt eine schreckliche Wunde</li>

		<li>flavortext_consequence->lässt [recipient_objective] [painevent] [wince]</li>
		<li>flavortext_consequence(p=0.2)->wirft [recipient_objective] aus dem Gleichgewicht</li>
	</Combat_MeleeDamageIncludes.rulePack.rulesStrings>



	<Combat_WoundIncludes.rulePack.rulesStrings>
		<li>destroyed_targets(RECIPIENT_part_destroyed_count==1)->[RECIPIENT_part_destroyed0_label]</li>
		<li>destroyed_targets(RECIPIENT_part_destroyed_count==2)->[RECIPIENT_part_destroyed0_label] und [RECIPIENT_part_destroyed1_label]</li>
		<li>destroyed_targets(RECIPIENT_part_destroyed_count==3)->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label] und [RECIPIENT_part_destroyed2_label]</li>
		<li>destroyed_targets->[RECIPIENT_part_destroyed0_label], [RECIPIENT_part_destroyed1_label], [RECIPIENT_part_destroyed2_label] und [RECIPIENT_part_destroyed3_label]</li>
		<!-- fallback for 4+ -->

		<li>damaged_targets(RECIPIENT_part_damaged_count==1)->[RECIPIENT_part_damaged0_label]</li>
		<li>damaged_targets(RECIPIENT_part_damaged_count==2)->[RECIPIENT_part_damaged0_label] und [RECIPIENT_part_damaged1_label]</li>
		<li>damaged_targets(RECIPIENT_part_damaged_count==3)->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label] und [RECIPIENT_part_damaged2_label]</li>
		<li>damaged_targets->[RECIPIENT_part_damaged0_label], [RECIPIENT_part_damaged1_label], [RECIPIENT_part_damaged2_label] und [RECIPIENT_part_damaged3_label]</li>
		<!-- fallback for 4+ -->

		<li>expertly->meisterhaft</li>
		<li>expertly->fachkundig</li>
		<li>expertly->geschickt</li>
		<li>expertly->flink</li>
		<li>expertly->geschickt</li>
		<li>expertly->elegant</li>
		<li>expertly->professionell</li>
		<li>expertly->treffend</li>
		<li>expertly->geschickt</li>
		<li>expertly->pfiffig</li>
		<li>expertly->meisterhaft</li>
		<li>expertly->künstlerisch</li>
		<li>expertly->mit Geschick</li>
		<li>expertly->mit eindrucksvoller Erfahrung</li>
		<li>expertly->mit Talent</li>
		<li>expertly->sorgfältig</li>
		<li>expertly->präzise</li>
		<li>expertly->mit Sicherheit</li>
		<li>expertly->mit Stärke</li>
		<li>expertly->mit Geschicklichkeit</li>
		<li>expertly->mit Meisterhaftigkeit</li>
		<li>expertly->mit Kunstfertigkeit</li>
		<li>expertly->mit Professionalität</li>
		<li>expertly->wie ein Virtuose</li>
		<li>expertly->wie ein Experte</li>
		<li>expertly->wie ein Meister</li>
		<li>expertly->wie ein Künstler</li>
		<li>expertly->wie ein Pro</li>

		<li>expert->erfahren</li>
		<li>expert->adept</li>
		<li>expert->geschickt</li>
		<li>expert->flink</li>
		<li>expert->gekonnt</li>
		<li>expert->raffiniert</li>
		<li>expert->professionell</li>
		<li>expert->fähig</li>
		<li>expert->gewand</li>
		<li>expert->schlau</li>
		<li>expert->meisterlich</li>
		<li>expert->künstlerisch</li>
	</Combat_WoundIncludes.rulePack.rulesStrings>



	<Combat_DeflectIncludes.rulePack.rulesStrings>
		<li>scraped_present->streift</li>
		<li>scraped_present->prallt ab</li>
		<li>scraped_present->streift</li>
		<li>scraped_present->prallt ab</li>
		<li>scraped_present->berührt</li>
		<li>scraped_present->gleitet</li>

		<li>scraped_past->striff</li>
		<li>scraped_past->prallte ab</li>
		<li>scraped_past->streifte</li>
		<li>scraped_past->prallte ab</li>
		<li>scraped_past->berührte</li>
		<li>scraped_past->glitt</li>
	</Combat_DeflectIncludes.rulePack.rulesStrings>



	<Combat_Hit.rulePack.rulesStrings>
		<li>r_logentry(p=0.3)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in der [RECIPIENT_part0_label].</li>
		<li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in der [RECIPIENT_part0_label] [adverb_flavortext].</li>
		<li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in der [RECIPIENT_part0_label] [flavortext_situation].</li>
		<li>r_logentry(p=0.1)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] in der [RECIPIENT_part0_label], [flavortext_consequence].</li>
		<li>r_logentry(p=0.07)->[INITIATOR_definite], trägt [INITIATOR_possessive] [WEAPON_label] [expertly], [damaged_past] [RECIPIENT_definite] in der [RECIPIENT_part0_label].</li>
		<li>r_logentry(p=0.05)->[INITIATOR_definite], trägt [INITIATOR_possessive] [WEAPON_label] [expertly], [adverb_flavortext] [damaged_past] [RECIPIENT_definite] in der [RECIPIENT_part0_label].</li>

		<!-- combined high priority, if we destroyed something -->
		<li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [destroyed_suffix].</li>
		<li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [expertly].</li>
		<li>r_logentry(p=0.3)->[INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] mit [implement].</li>

		<li>result(p=1,RECIPIENT_part_damaged_count==0)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets]</li>
		<li>result(p=1,RECIPIENT_part_destroyed_count==0)->[damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
		<li>result(p=1)->[destroyed_present] [RECIPIENT_possessive] [destroyed_targets] und [damaged_present] [RECIPIENT_possessive] [damaged_targets]</li>
		<li>action(p=0.3)->[INITIATOR_definite] [damaged_present] [RECIPIENT_definite] mit [implement]</li>
		<li>action(p=0.3)->[INITIATOR_definite] benutzt [implement] um [damaged_inf] [RECIPIENT_definite]</li>
		<li>action->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite] mit [implement]</li>
		<li>action(p=0.6)->[INITIATOR_definite] [damaged_past] [RECIPIENT_definite]</li>
	</Combat_Hit.rulePack.rulesStrings>



	<Combat_Deflect.rulePack.rulesStrings>
		<li>r_logentry(p=1)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] in the [RECIPIENT_part0_label] [deflected_result].</li>
		<li>r_logentry(p=0.3)->[INITIATOR_definite], wielding [INITIATOR_possessive] [WEAPON_label] [expertly], [damaged_past] [RECIPIENT_definite] in the [RECIPIENT_part0_label] [deflected_result].</li>

		<li>r_logentry(p=0.3)->[INITIATOR_definite] hit [RECIPIENT_definite] with a [damaged_inf] from [implement] [deflected_result].</li>
		<li>r_logentry(p=0.3)->[INITIATOR_definite] used [implement] to [damaged_inf] [RECIPIENT_definite] [deflected_result].</li>
		<li>r_logentry(p=0.6)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] with [implement] [deflected_result].</li>
		<li>r_logentry(p=0.6)->[INITIATOR_definite] [damaged_past] [at] [RECIPIENT_definite] [deflected_result].</li>

		<li>at-></li>
		<li>at->at</li>

		<li>deflected_result-> [adverb_deflected]</li>
		<li>deflected_result->, [deflected_consequence]</li>

		<li>adverb_deflected_opt(p=4)-></li>
		<li>adverb_deflected_opt->[adverb_deflected]</li>

		<li>adverb_deflected->harmlessly</li>
		<li>adverb_deflected->uselessly</li>

		<li>deflected_consequence->but the [TOOL_label] [scraped_past] off [adverb_deflected_opt]</li>
		<li>deflected_consequence->[scraped_present] off [RECIPIENT_possessive] armor [adverb_deflected_opt]</li>

		<li>scraped_present->scraping</li>
		<li>scraped_present->sliding</li>

		<li>scraped_past->scraped</li>
		<li>scraped_past->slid</li>
	</Combat_Deflect.rulePack.rulesStrings>



	<Combat_FailIncludes.rulePack.rulesStrings>
		<li>action->[INITIATOR_definite] [tried] [RECIPIENT_definite] zu [damaged_inf]</li>
		<li>action->[INITIATOR_definite] [tried] [RECIPIENT_definite] mit [implement] zu [damaged_inf]</li>
		<li>action->[INITIATOR_definite] [tried] mit [implement] [RECIPIENT_definite] zu [damaged_inf]</li>
		<li>action->[INITIATOR_definite] schlägt [INITIATOR_possessive] [WEAPON_label] [towardsat] [RECIPIENT_definite]</li>
		<li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] mit [implement]</li>
		<li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] mit [implement]</li>
		<li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] mit [implement]</li>

		<li>towardsat->in Richtung</li>
		<li>towardsat->auf</li>

		<li>verb_genericattack->schlägt</li>
		<li>verb_genericattack->drischt</li>
		<li>verb_genericattack->prügelt</li>

		<li>tried->versucht</li>
		<li>tried->verfehlt</li>
	</Combat_FailIncludes.rulePack.rulesStrings>



	<Combat_Miss.rulePack.rulesStrings>
		<li>r_logentry(p=0.2)->[RECIPIENT_definite] weicht [INITIATOR_definite]'s [WEAPON_label] [damaged_inf] aus.</li>
		<li>r_logentry(p=0.2)->[INITIATOR_definite] verfehlt [RECIPIENT_definite] mit [damaged_inf] von [implement].</li>

		<li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype] beim Versuch [RECIPIENT_definite] mit [implement] zu [damaged_inf].</li>
		<li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype] beim Versuch [RECIPIENT_definite] zu [damaged_inf].</li>
		<li>r_logentry(p=0.2)->[INITIATOR_definite] [failtype].</li>

		<li>failtype->strauchelte</li>
		<li>failtype->stolperte</li>
		<li>failtype->verriss</li>
		<li>failtype->verwackelte</li>
		<li>failtype->verfehlte</li>

		<li>result->aber verfehlte</li>
		<li>result->aber traf nur die Luft</li>
		<li>result->aber das ging weit daneben</li>
		<li>result->aber stolperte im letzten Moment</li>
		<li>result->aber zögerte im letzten Moment</li>
	</Combat_Miss.rulePack.rulesStrings>



	<Combat_Dodge.rulePack.rulesStrings>
		<li>r_logentry(p=0.2)->[RECIPIENT_definite] wich [INITIATOR_definite]'s [damaged_inf] mit [implement] aus.</li>
		<li>r_logentry(p=0.2)->[RECIPIENT_definite] wich [INITIATOR_definite]'s [damaged_inf] aus.</li>

		<li>result->aber [RECIPIENT_definite] sprang aus zur Seite</li>
		<li>result->aber wurde von der Finte von [RECIPIENT_definite] getäuscht</li>
		<li>result->aber dem Angriff wurde geschickt ausgewichen</li>
	</Combat_Dodge.rulePack.rulesStrings>



	<Combat_RangedFire.rulePack.rulesStrings>
		<li>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite] mit [WEAPON_label].</li>
		<li>r_logentry->[INITIATOR_definite] [shot] [INITIATOR_possessive] [WEAPON_label] auf [RECIPIENT_definite].</li>
		<li>r_logentry->[INITIATOR_definite] [shotat] [RECIPIENT_definite].</li>
		<li>r_logentry->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label] auf [RECIPIENT_definite].</li>
		<li>r_logentry(recipient_missing==True)->[INITIATOR_definite] [shot_a] [WEAPON_projectile_label].</li>
		<li>r_logentry(recipient_missing==True)->[INITIATOR_definite] [shot] [WEAPON_label].</li>

		<li>shot_a->[verb_shot] [adverb_shot] ein</li>
		<li>shot_a(p=2)->[verb_shot] ein</li>

		<li>shot(p=2)->[verb_shot]</li>
		<li>shot->[verb_shot] [adverb_shot]</li>

		<li>shotat->schoss [aburst]auf</li>
		<li>shotat->schoss [adverb_shot] [aburst]auf</li>
		<li>shotat(p=0.5)->schoss versuchsweise [aburst]auf</li>
		<li>shotat(p=0.3)->gab einen Schuss ab auf</li>
		<li>shotat(p=0.2)->schoss [adjective_shot] auf</li>
		<li>shotat->feuerte [aburst]auf</li>
		<li>shotat->feuerte [adverb_shot] [aburst]auf</li>
		<li>shotat(p=0.5)->zielte und schoss [aburst]auf</li>
		<li>shotat(p=0.3)->eröffnete das Feuer auf</li>

		<li>aburst-></li>
		<li>aburst(BURST==True,p=3)->eine Salve </li>

		<li>burst-></li>
		<li>burst(BURST==True,p=3)->Salve</li>

		<li>verb_shot->schoss</li>
		<li>verb_shot->feuerte</li>
		<li>verb_shot->entlud</li>
		<li>adverb_shot->sorgfältig</li>
		<li>adverb_shot->schnell</li>
		<li>adverb_shot->präzise</li>
		<li>adverb_shot->gezielt</li>
		<li>adverb_shot(initiator_flesh!=Mechanoid)->sachte</li>
		<li>adverb_shot->präzise</li>
		<li>adverb_shot(initiator_flesh!=Mechanoid)->vorsichtig</li>
		<li>adjective_shot->sorgfältig</li>
		<li>adjective_shot->schnell</li>
		<li>adjective_shot->absichtlich</li>
		<li>adjective_shot->genau</li>
		<li>adjective_shot(initiator_flesh!=Mechanoid)->vorsichtig</li>
	</Combat_RangedFire.rulePack.rulesStrings>



	<Combat_RangedFire_Thrown.rulePack.rulesStrings>
		<li>r_logentry->[INITIATOR_definite] [threw] [INITIATOR_possessive] [WEAPON_projectile_label] auf [RECIPIENT_definite].</li>
		<li>r_logentry->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label] auf [RECIPIENT_definite].</li>
		<li>r_logentry(recipient_missing==True)->[INITIATOR_definite] [threw] [INITIATOR_possessive] [WEAPON_projectile_label].</li>
		<li>r_logentry(recipient_missing==True)->[INITIATOR_definite] [threw_a] [WEAPON_projectile_label].</li>

		<li>threw_a->[adverb_threw] [verb_threw] ein</li>
		<li>threw_a(p=2)->[verb_threw] ein</li>

		<li>threw(p=2)->[verb_threw]</li>
		<li>threw->[adverb_threw] [verb_threw]</li>

		<li>verb_threw->warf</li>
		<li>verb_threw->schleuderte</li>
		<li>verb_threw->schmiss</li>

		<li>adverb_threw->sorgfältig</li>
		<li>adverb_threw->schnell</li>
		<li>adverb_threw->genau</li>
		<li>adverb_threw->absichtlich</li>
		<li>adverb_threw(initiator_flesh!=Mechanoid)->vorsichtig</li>
		<li>adverb_threw->präzise</li>
		<li>adverb_threw(initiator_flesh!=Mechanoid)->vosichtig</li>

		<li>adjective_threw->sorgfältig</li>
		<li>adjective_threw->schnell</li>
		<li>adjective_threw->absichtlich</li>
		<li>adjective_threw->präzise</li>
		<li>adjective_threw(initiator_flesh!=Mechanoid)->vosichtig</li>
	</Combat_RangedFire_Thrown.rulePack.rulesStrings>



	<!-- various destroyed options; we allow these even if we could use hybrid, to cut down a bit on clutter -->
	<Combat_RangedDamage.rulePack.rulesStrings>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [to] [destroyed_suffix].</li>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [expertly].</li>
		<li>r_logentry(p=2)->[WEAPON_projectile_label] von [INITIATOR_definite] [missed] [ORIGINALTARGET_definite] und [destroyed_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry(p=2)->[WEAPON_projectile_label] von [INITIATOR_definite] [missed] [ORIGINALTARGET_definite], [destroyed_present] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [to] [destroyed_suffix].</li>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [expertly].</li>

		<!-- various damaged options; don't show if something was destroyed -->
		<li>r_logentry(RECIPIENT_partDestroyed_count==0)->[WEAPON_projectile_label] von [INITIATOR_definite] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
		<li>r_logentry(RECIPIENT_partDestroyed_count==0)->[WEAPON_projectile_label] von [INITIATOR_definite] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [expertly].</li>
		<li>r_logentry(RECIPIENT_partDestroyed_count==0,p=2)->[WEAPON_projectile_label] von [INITIATOR_definite] [missed] [ORIGINALTARGET_definite] und [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
		<li>r_logentry(RECIPIENT_partDestroyed_count==0,p=2)->[WEAPON_projectile_label] von [INITIATOR_definite] [missed] [ORIGINALTARGET_definite], [damaged_present] [RECIPIENT_definite]'s [damaged_targets].</li>
		<li>r_logentry(RECIPIENT_partDestroyed_count==0)->[WEAPON_projectile_label] von [INITIATOR_definite] [damaged_past] [RECIPIENT_definite]'s [damaged_targets].</li>
		<li>r_logentry(RECIPIENT_partDestroyed_count==0)->[WEAPON_projectile_label] von [INITIATOR_definite] [damaged_past] [RECIPIENT_definite]'s [damaged_targets] [expertly].</li>

		<!-- damaged/destroyed hybrid -->
		<li>r_logentry(p=3)->[WEAPON_projectile_label] von [INITIATOR_definite] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] und [damaged_past] [RECIPIENT_possessive] [damaged_targets].</li>
		<li>r_logentry(p=6)->[WEAPON_projectile_label] von [INITIATOR_definite] [missed] [ORIGINALTARGET_definite], [destroyed_present] [destroyed_targets] von [RECIPIENT_definite] und [damaged_present] [RECIPIENT_possessive] [damaged_targets].</li>

		<!-- don't mention damage or destruction; uncommon, but intended as a fallback -->
		<li>r_logentry(p=0.2)->[INITIATOR_definite] traf [RECIPIENT_definite] mit einer [WEAPON_projectile_label].</li>
		<li>r_logentry(p=0.2)->[WEAPON_projectile_label] von [INITIATOR_definite] traf [RECIPIENT_definite].</li>
		<li>r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] und traf [RECIPIENT_definite] mit einer [WEAPON_projectile_label].</li>
		<li>r_logentry(p=0.4)->[WEAPON_projectile_label] von [INITIATOR_definite] [missed] [ORIGINALTARGET_definite] und traf [RECIPIENT_definite].</li>
		<li>r_logentry(p=0.2)->[INITIATOR_definite] traf [RECIPIENT_definite] mit einer [WEAPON_projectile_label], die für [ORIGINALTARGET_definite] bestimmt war.</li>

		<!-- fallback, also a little variety -->
		<li>WEAPON_projectile_label(p=0.05)->Schuss</li>
		<li>destroyed_past->zerschlug</li>
		<li>destroyed_past->zerquetschte</li>
		<li>destroyed_past->zerstörte</li>
		<li>destroyed_past->vernichtete</li>
		<li>destroyed_past->durchschlug</li>
		<li>destroyed_past->durchlöcherte</li>
		<li>destroyed_past->durchstach</li>
		<li>destroyed_present->zerschlägt</li>
		<li>destroyed_present->zerquetscht</li>
		<li>destroyed_present->zerstört</li>
		<li>destroyed_present->vernichtet</li>
		<li>destroyed_present->durchschlägt</li>
		<li>destroyed_present->durchlöchert</li>
		<li>destroyed_present->schlägt durch</li>
		<li>destroyed_suffix->Stücke</li>
		<li>destroyed_suffix->kleine Teile</li>
		<li>destroyed_suffix->ein feiner Nebel</li>
		<li>destroyed_suffix->Fragmente</li>
		<li>destroyed_suffix(p=0.5)->ein löchriges Chaos</li>
		<li>destroyed_suffix(recipient_flesh!=Mechanoid,p=0.2)->Hackfleisch</li>
		<li>damaged_past->verwundete</li>
		<li>damaged_past->verletzte</li>
		<li>damaged_past->durchschlug</li>
		<li>damaged_past->beschädigte</li>
		<li>damaged_past->schoss</li>
		<li>damaged_present->verwundet</li>
		<li>damaged_present->verletzt</li>
		<li>damaged_present->durchschlägt</li>
		<li>damaged_present->beschädigt</li>
		<li>damaged_present->schießt</li>
		<li>damaged_suffix->in einer üblen Art</li>
		<li>damaged_suffix(recipient_flesh!=Mechanoid)->mit sichtbaren Blutungen</li>
		<li>damaged_suffix(recipient_flesh!=Mechanoid)->mit sichtbarem Fleisch</li>
		<li>to->in</li>
		<li>to->in</li>
		<li>missed->verfehlt</li>
		<li>missed->verfehlt knapp</li>
	</Combat_RangedDamage.rulePack.rulesStrings>



	<Combat_RangedDeflect.rulePack.rulesStrings>
		<li>r_logentry->[INITIATOR_definite]'s [WEAPON_projectile_label] [damaged_past] [RECIPIENT_definite][damaged_target] [deflected_result].</li>
		<li>r_logentry(p=2)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] und [damaged_past] [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</li>
		<li>r_logentry->[RECIPIENT_definite][damaged_target_possessive_opt] wurde [damaged_past] von [INITIATOR_definite]'s [WEAPON_projectile_label] [deflected_result].</li>

		<li>r_logentry(p=0.2)->[INITIATOR_definite] traf [RECIPIENT_definite][damaged_target_possessive_opt] mit [WEAPON_projectile_label] [deflected_result].</li>
		<li>r_logentry(p=0.2)->[INITIATOR_definite]'s [WEAPON_projectile_label] traf [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</li>
		<li>r_logentry(p=0.4)->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite] und traf [RECIPIENT_definite][damaged_target_possessive_opt] mit [WEAPON_projectile_label] [deflected_result].</li>
		<li>r_logentry(p=0.4)->[INITIATOR_definite]'s [WEAPON_projectile_label] [missed] [ORIGINALTARGET_definite] und traf [RECIPIENT_definite][damaged_target_possessive_opt] [deflected_result].</li>
		<li>r_logentry(p=0.2)->[INITIATOR_definite] traf [RECIPIENT_definite][damaged_target_possessive_opt] mit [WEAPON_projectile_label], das für [ORIGINALTARGET_definite] bestimmt war [deflected_result].</li>

		<!-- fallback, also a little variety -->
		<li>WEAPON_projectile_label(p=0.05)->schoss</li>

		<li>damaged_target_possessive_opt-></li>
		<li>damaged_target_possessive_opt(RECIPIENT_part_damaged0_outside==True)->'s [RECIPIENT_part_damaged0_label]</li>

		<li>deflected_result-> [adverb_deflected]</li>
		<li>deflected_result->, [deflected_consequence]</li>

		<li>adverb_deflected_opt(p=4)-></li>
		<li>adverb_deflected_opt->[adverb_deflected]</li>

		<li>adverb_deflected->harmlos</li>
		<li>adverb_deflected->unbrauchbar</li>

		<li>deflected_consequence->aber es [scraped_past] [adverb_deflected_opt] von der Rüstung ab</li>
		<li>deflected_consequence->[scraped_present] [adverb_deflected_opt] von [RECIPIENT_possessive] Rüstung ab</li>

		<li>scraped_past->prallte</li>

		<li>scraped_present->prallt</li>

		<li>missed->verfehlt</li>
		<li>missed->verfehlt knapp</li>	
	</Combat_RangedDeflect.rulePack.rulesStrings>



	<Combat_RangedMiss.rulePack.rulesStrings>
		<li>r_logentry->[WEAPON_projectile_label] von [INITIATOR_definite] [missed].</li>

		<li>r_logentry->[INITIATOR_definite] [missed] [ORIGINALTARGET_definite].</li>
		<li>r_logentry->[ORIGINALTARGET_definite] [avoidance], [WEAPON_projectile_label] von [INITIATOR_definite] [missing].</li>

		<li>missed(p=4)->verfehlte</li>
		<li>missed(p=2)->verfehlte ganz knapp</li>
		<li>missed(p=2)->ging weit daneben</li>
		<li>missed->ging daneben</li>
		<li>missed->flog weit übers Ziel</li>
		<li>missed->flog hoch in die Luft</li>
		<li>missed->grub sich in den Boden</li>
		<li>missed->prallte vom Boden ab und ging verloren</li>
		<li>missed->schlug ein Loch in den Boden</li>
		<li>missed(p=0.2)->verfehlte [ORIGINALTARGET_definite] um wenige Millimeter</li>
		<li>missed->verfehlte [ORIGINALTARGET_definite] um einige Zentimeter</li>
		<li>missed->verfehlte [ORIGINALTARGET_definite] um einen guten Meter</li>
		<li>missed->wurde aus der Flugbahn geweht</li>

		<li>missing->verfehlte</li>
		<li>missing->verfehlte ganz knapp</li>
		<li>missing->ging weit daneben</li>
		<li>missing->ging daneben</li>
		<li>missing->flog weit übers Ziel</li>
		<li>missing->flog hoch in die Luft</li>
		<li>missing->grub sich in den Boden</li>
		<li>missing->prallte vom Boden ab und ist verloren</li>
		<li>missing->schlug ein Loch in den Boden</li>
		<li>missing(p=0.2)->verfehlte [ORIGINALTARGET_definite] um wenige Millimeter</li>
		<li>missing->verfehlte [ORIGINALTARGET_definite] um einige Zentimeter</li>
		<li>missing->verfehlte [ORIGINALTARGET_definite] um einen guten Meter</li>
		<li>missing->wurde aus der Bahn geweht</li>

		<li>avoidance(ORIGINALTARGET_mobile==True)->sprang in der letzten Sekunde zur Seite</li>
		<li>avoidance(ORIGINALTARGET_mobile==True)->stolperte beim Versuch zu entkommen</li>
		<li>avoidance(ORIGINALTARGET_mobile==True)->warf sich selbst zu Boden</li>
		<li>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->duckte sich hinter [COVER_definite]</li>
		<li>avoidance(ORIGINALTARGET_mobile==True,p=0.3)->sprang hinter [COVER_definite]</li>
	</Combat_RangedMiss.rulePack.rulesStrings>



	<Combat_ExplosionImpact.rulePack.rulesStrings>
		<li>prefix->Die [blast] [fromof] [INITIATOR_definite]'s [WEAPON_projectile_label]</li>
		<li>prefix->Die [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]</li>
		<li>prefix->Die [blast] [fromof] [INITIATOR_definite]'s [WEAPON_projectile_label]</li>
		<li>prefix->Die [blast] [fromof] [INITIATOR_definite]'s [WEAPON_label]</li>
		<li>prefix->[INITIATOR_definite]'s [blast]</li>
		<li>prefix->[INITIATOR_definite]'s [WEAPON_projectile_label] [blast]</li>
		<li>prefix->[INITIATOR_definite]'s [WEAPON_label] [blast]</li>
		<li>prefix->[INITIATOR_definite]'s [WEAPON_projectile_label]</li>
		<li>prefix->[INITIATOR_definite]'s [WEAPON_label]</li>

		<li>r_logentry->[prefix] [injured] [RECIPIENT_definite].</li>

		<li>r_logentry->[prefix] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry->[prefix] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] [adverb_flavortext].</li>
		<li>r_logentry->[prefix] [adverb_flavortext] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry->[prefix] [destroyed_past] [destroyed_targets] von [RECIPIENT_definite] und [damaged_past] [RECIPIENT_possessive] [damaged_targets].</li>
		<li>r_logentry(RECIPIENT_part_destroyed_count==0)->[prefix] [damaged_past] [destroyed_targets] von [RECIPIENT_definite].</li>
		<li>r_logentry(RECIPIENT_part_destroyed_count==0)->[prefix] [damaged_past] [destroyed_targets] von [RECIPIENT_definite] [adverb_flavortext].</li>
		<li>r_logentry(RECIPIENT_part_destroyed_count==0)->[prefix] [adverb_flavortext] [damaged_past] [destroyed_targets] von [RECIPIENT_definite].</li>

		<li>r_logentry->[RECIPIENT_definite] wurde [damaged_past] durch [INITIATOR_definite].</li>
		<li>r_logentry->[RECIPIENT_definite] wurde [damaged_past] [adverb_flavortext] durch [INITIATOR_definite].</li>
		<li>r_logentry->[RECIPIENT_definite] wurde [damaged_past].</li>

		<!-- final fallbacks -->
		<li>r_logentry(p=0.001)->[RECIPIENT_definite] wurde von einer Explosion erfasst.</li>
		<li>r_logentry(p=0.001)->[RECIPIENT_definite] wurde von einer Explosion getroffen.</li>

		<li>blast->Explosion</li>
		<li>blast->Sprengung</li>
		<li>blast->Druckwelle</li>
		<li>blast->Detonation</li>
		<li>blast->Entladung</li>
		<li>blast->Wirkung</li>

		<li>fromof->von</li>
		<li>fromof->durch</li>
	</Combat_ExplosionImpact.rulePack.rulesStrings>

</LanguageData>
